// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: proto/calculator.proto

package calculatorpb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 运算类型枚举
type Operation int32

const (
	Operation_ADD      Operation = 0 // 加法
	Operation_SUBTRACT Operation = 1 // 减法
	Operation_MULTIPLY Operation = 2 // 乘法
	Operation_DIVIDE   Operation = 3 // 除法
)

// Enum value maps for Operation.
var (
	Operation_name = map[int32]string{
		0: "ADD",
		1: "SUBTRACT",
		2: "MULTIPLY",
		3: "DIVIDE",
	}
	Operation_value = map[string]int32{
		"ADD":      0,
		"SUBTRACT": 1,
		"MULTIPLY": 2,
		"DIVIDE":   3,
	}
)

func (x Operation) Enum() *Operation {
	p := new(Operation)
	*p = x
	return p
}

func (x Operation) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Operation) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_calculator_proto_enumTypes[0].Descriptor()
}

func (Operation) Type() protoreflect.EnumType {
	return &file_proto_calculator_proto_enumTypes[0]
}

func (x Operation) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Operation.Descriptor instead.
func (Operation) EnumDescriptor() ([]byte, []int) {
	return file_proto_calculator_proto_rawDescGZIP(), []int{0}
}

// 计算请求
type CalculateRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	A             float64                `protobuf:"fixed64,1,opt,name=a,proto3" json:"a,omitempty"`                            // 第一个操作数
	B             float64                `protobuf:"fixed64,2,opt,name=b,proto3" json:"b,omitempty"`                            // 第二个操作数
	Op            Operation              `protobuf:"varint,3,opt,name=op,proto3,enum=calculator.Operation" json:"op,omitempty"` // 运算类型
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CalculateRequest) Reset() {
	*x = CalculateRequest{}
	mi := &file_proto_calculator_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CalculateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CalculateRequest) ProtoMessage() {}

func (x *CalculateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_calculator_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CalculateRequest.ProtoReflect.Descriptor instead.
func (*CalculateRequest) Descriptor() ([]byte, []int) {
	return file_proto_calculator_proto_rawDescGZIP(), []int{0}
}

func (x *CalculateRequest) GetA() float64 {
	if x != nil {
		return x.A
	}
	return 0
}

func (x *CalculateRequest) GetB() float64 {
	if x != nil {
		return x.B
	}
	return 0
}

func (x *CalculateRequest) GetOp() Operation {
	if x != nil {
		return x.Op
	}
	return Operation_ADD
}

// 计算响应
type CalculateResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Result        float64                `protobuf:"fixed64,1,opt,name=result,proto3" json:"result,omitempty"` // 计算结果
	Error         string                 `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`     // 错误信息（如除以零）
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CalculateResponse) Reset() {
	*x = CalculateResponse{}
	mi := &file_proto_calculator_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CalculateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CalculateResponse) ProtoMessage() {}

func (x *CalculateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_calculator_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CalculateResponse.ProtoReflect.Descriptor instead.
func (*CalculateResponse) Descriptor() ([]byte, []int) {
	return file_proto_calculator_proto_rawDescGZIP(), []int{1}
}

func (x *CalculateResponse) GetResult() float64 {
	if x != nil {
		return x.Result
	}
	return 0
}

func (x *CalculateResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

var File_proto_calculator_proto protoreflect.FileDescriptor

const file_proto_calculator_proto_rawDesc = "" +
	"\n" +
	"\x16proto/calculator.proto\x12\n" +
	"calculator\"U\n" +
	"\x10CalculateRequest\x12\f\n" +
	"\x01a\x18\x01 \x01(\x01R\x01a\x12\f\n" +
	"\x01b\x18\x02 \x01(\x01R\x01b\x12%\n" +
	"\x02op\x18\x03 \x01(\x0e2\x15.calculator.OperationR\x02op\"A\n" +
	"\x11CalculateResponse\x12\x16\n" +
	"\x06result\x18\x01 \x01(\x01R\x06result\x12\x14\n" +
	"\x05error\x18\x02 \x01(\tR\x05error*<\n" +
	"\tOperation\x12\a\n" +
	"\x03ADD\x10\x00\x12\f\n" +
	"\bSUBTRACT\x10\x01\x12\f\n" +
	"\bMULTIPLY\x10\x02\x12\n" +
	"\n" +
	"\x06DIVIDE\x10\x032_\n" +
	"\x11CalculatorService\x12J\n" +
	"\tCalculate\x12\x1c.calculator.CalculateRequest\x1a\x1d.calculator.CalculateResponse\"\x00B\x1fZ\x1dcalculator/proto;calculatorpbb\x06proto3"

var (
	file_proto_calculator_proto_rawDescOnce sync.Once
	file_proto_calculator_proto_rawDescData []byte
)

func file_proto_calculator_proto_rawDescGZIP() []byte {
	file_proto_calculator_proto_rawDescOnce.Do(func() {
		file_proto_calculator_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proto_calculator_proto_rawDesc), len(file_proto_calculator_proto_rawDesc)))
	})
	return file_proto_calculator_proto_rawDescData
}

var file_proto_calculator_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_proto_calculator_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_proto_calculator_proto_goTypes = []any{
	(Operation)(0),            // 0: calculator.Operation
	(*CalculateRequest)(nil),  // 1: calculator.CalculateRequest
	(*CalculateResponse)(nil), // 2: calculator.CalculateResponse
}
var file_proto_calculator_proto_depIdxs = []int32{
	0, // 0: calculator.CalculateRequest.op:type_name -> calculator.Operation
	1, // 1: calculator.CalculatorService.Calculate:input_type -> calculator.CalculateRequest
	2, // 2: calculator.CalculatorService.Calculate:output_type -> calculator.CalculateResponse
	2, // [2:3] is the sub-list for method output_type
	1, // [1:2] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_proto_calculator_proto_init() }
func file_proto_calculator_proto_init() {
	if File_proto_calculator_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_calculator_proto_rawDesc), len(file_proto_calculator_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_calculator_proto_goTypes,
		DependencyIndexes: file_proto_calculator_proto_depIdxs,
		EnumInfos:         file_proto_calculator_proto_enumTypes,
		MessageInfos:      file_proto_calculator_proto_msgTypes,
	}.Build()
	File_proto_calculator_proto = out.File
	file_proto_calculator_proto_goTypes = nil
	file_proto_calculator_proto_depIdxs = nil
}
